{"version":3,"sources":["logo.svg","components/artistCard.js","components/artistList.js","components/songList.js","custom_hooks/useInput.js","components/popUp.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["ArtistCard","props","artistName","artist","name","artistID","id","spotifyUrl","external_urls","spotify","artistImgURL","images","followers","total","genres","generesLen","length","displayGenres","map","genre","i","useState","disabled","setDisabled","useEffect","listOfArtists","Card","style","wdith","Img","variant","src","url","onClick","newWindow","window","open","opener","openInNewTab","className","Body","Title","ListGroup","ListGroupItem","Button","type","e","preventDefault","handleListChange","handleOnClick","ArtistList","artistNameList","listofartists","token","Item","icon","faMinusCircle","handleListRemove","removeArtist","requestOptions","method","redirect","a","songArray","Promise","all","fetch","then","response","json","result","push","catch","error","console","log","handleSetListOfSongs","getPopularSongs","handleSubmit","SongList","listOfSongs","listofsongs","song","albumName","songName","songID","handleSetListOfSongsRemove","removeSong","handleClearSongList","handleClear","setShowPopUp","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","PopUp","bindName","resetName","description","bindDescription","resetDescription","Modal","size","aria-labelledby","centered","Header","closeButton","Row","Col","Form","Group","controlId","Label","Control","as","class","Footer","songURIList","songURI","headers","body","JSON","stringify","playlistData","public","songs","uris","onHide","HomePage","setArtisit","content","setContent","setListOfArtists","setListOfSongs","showPopUp","newArtistList","filtered","filter","Container","onSubmit","placeholder","key","results","newSongList","album","artists","songURL","uri","inList","existingSong","show","redirectUri","scopes","hash","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","setToken","origin","toString","_token","access_token","href","join","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qQAAe,I,+GC6DAA,EAzDI,SAACC,GAEhB,IAAMC,EAAaD,EAAME,OAAOC,KAC1BC,EAAWJ,EAAME,OAAOG,GACxBC,EAAaN,EAAME,OAAOK,cAAcC,QACxCC,EAAeT,EAAME,OAAOQ,OAAO,GACnCC,EAAYX,EAAME,OAAOS,UAAUC,MACnCC,EAASb,EAAME,OAAOW,OACtBC,EAAaD,EAAOE,OACpBC,EAAgBH,EAAOI,KAAI,SAACC,EAAOC,GACrC,OAAO,qCAAGD,EAAOC,EAAIL,EAAa,EAAI,KAAO,SAVvB,EAaMM,oBAAS,GAbf,mBAanBC,EAbmB,KAaTC,EAbS,KAe1BC,qBAAU,WACND,GAAY,GACZtB,EAAMwB,cAAcP,KAAI,SAACf,GACrB,GAAIA,EAAOE,WAAaA,EAEpB,OADAkB,GAAY,IACL,OAGhB,CAAClB,EAAUJ,EAAMwB,cAAevB,IAiBnC,OACI,eAACwB,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKrB,GAAgBA,EAAasB,IAAKC,QAAS,kBAjB3D,SAACD,GAClB,IAAME,EAAYC,OAAOC,KAAKJ,EAAK,SAAU,uBACzCE,IAAWA,EAAUG,OAAS,MAegDC,CAAa/B,IAAagC,UAAU,gBAClH,eAACb,EAAA,EAAKc,KAAN,WACI,cAACd,EAAA,EAAKe,MAAN,UAAavC,IACb,eAACwC,EAAA,EAAD,CAAWH,UAAU,8BAArB,UACI,eAACI,EAAA,EAAD,yBAA2B/B,KAC3B,eAAC+B,EAAA,EAAD,uBAAyB1B,QAE7B,cAAC2B,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAASZ,QAAS,SAACa,GAAD,OAnBvC,SAACA,GACnBA,EAAEC,iBACF9C,EAAM+C,iBAAiB9C,EAAYG,GACnCkB,GAAY,GAgBoD0B,CAAcH,IAAIxB,SAAUA,EAApF,uC,yCCID4B,EArDI,SAACjD,GAEhB,IAAMkD,EAAiBlD,EAAMmD,cACvBC,EAAQpD,EAAMoD,MAkCpB,OACI,8BACI,eAACX,EAAA,EAAD,WACKS,GAAkBA,EAAejC,KAAI,SAACf,GACnC,OAAO,eAACuC,EAAA,EAAUY,KAAX,WAAuCnD,EAAOD,WACjD,cAAC,IAAD,CAAiBqC,UAAU,eAAegB,KAAMC,IAAevB,QAAS,SAACa,GAAD,OAVvE,SAACA,EAAGzC,EAAUH,GAC/B4C,EAAEC,iBACF9C,EAAMwD,iBAAiBvD,EAAYG,GAQ4DqD,CAAaZ,EAAG3C,EAAOE,SAAUF,EAAOD,iBAD/FC,EAAOE,aAIvC,cAACuC,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAASN,UAAU,iBAAiBN,QAAS,SAACa,GAAD,OAvCnE,SAACA,GAClBA,EAAEC,iBACF,IAAIY,EAAiB,CACjBC,OAAQ,MACRC,SAAU,UAJU,4CASxB,4BAAAC,EAAA,6DACQC,EAAY,GADpB,SAEUC,QAAQC,IAAId,EAAejC,IAAf,+BAAA4C,EAAA,MAAmB,WAAO3D,GAAP,SAAA2D,EAAA,sEAC3BI,MAAM,iCAAD,OAAkC/D,EAAOE,SAAzC,kBAA2DgD,GAASM,GAC9EQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFP,EAAUQ,KAAV,MAAAR,EAAS,YAASO,OAErBE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,MANJ,2CAAnB,wDAFtB,OAWExE,EAAM2E,qBAAqBb,GAX7B,4CATwB,0DAuBxBc,GAgB2FC,CAAahC,IAAhG,+CCRDiC,EArCE,SAAC9E,GAEd,IAAM+E,EAAc/E,EAAMgF,YAY1B,OACI,8BACI,eAACvC,EAAA,EAAD,WACKsC,GAAeA,EAAY9D,KAAI,SAACgE,GAC7B,OAAO,eAACxC,EAAA,EAAUY,KAAX,WACH,sBAAKf,UAAU,aAAf,UAA6B2C,EAAKhF,WAAlC,KAAgDgF,EAAKC,aACrD,gCACKD,EAAKE,SACN,cAAC,IAAD,CAAiB7C,UAAU,eAAegB,KAAMC,IAAevB,QAAS,SAACa,GAAD,OAlB7E,SAACA,EAAGuC,EAAQD,GAC3BtC,EAAEC,iBACF9C,EAAMqF,2BAA2BF,EAAUC,GAgBwDE,CAAWzC,EAAGoC,EAAKG,OAAQH,EAAKE,kBAJ3FF,EAAKG,WASrC,sBAAK9C,UAAU,kBAAf,UACA,cAACK,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAASN,UAAU,iBAAiBN,QAAS,SAACa,GAAD,OAnBpE,SAACA,GACjBA,EAAEC,iBACF9C,EAAMuF,sBAiBqFC,CAAY3C,IAA/F,wBACA,cAACF,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAASN,UAAU,iBAAiBN,QAAS,kBAAMhC,EAAMyF,cAAa,IAArG,sC,QCfDC,EAhBE,SAAAC,GAAiB,IAAD,EACHvE,mBAASuE,GADN,mBACtBC,EADsB,KACfC,EADe,KAG7B,MAAO,CACHD,QACAC,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACFH,QACAI,SAAU,SAAAC,GACNJ,EAASI,EAAMC,OAAON,WCqGvBO,EAzGD,SAACnG,GAAW,IAAD,EAEqC0F,EAAS,IAApDvF,EAFM,EAEbyF,MAAmBQ,EAFN,EAEAL,KAAuBM,EAFvB,EAEgBP,MAFhB,EAG0DJ,EAAS,IAAzEY,EAHM,EAGbV,MAA0BW,EAHb,EAGOR,KAA8BS,EAHrC,EAG8BV,MAG7Cf,EAAc/E,EAAMgF,YACpB5B,EAAQpD,EAAMoD,MA+CpB,OACI,eAACqD,EAAA,EAAD,2BACQzG,GADR,IAEI0G,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJZ,UAMI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMjE,MAAP,CAAanC,GAAG,gCAAhB,yCAIJ,cAACoG,EAAA,EAAMlE,KAAP,UACI,eAACwE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAM3E,UAAU,cAAhB,UACI,eAAC2E,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,aAAczE,KAAK,QAAWwD,OAElC,eAACa,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,aAAcC,GAAG,YAAef,YAI5C,eAACS,EAAA,EAAD,8BAEA,cAACvE,EAAA,EAAD,CAAWH,UAAU,gBAArB,SACSyC,GAAeA,EAAY9D,KAAI,SAACgE,GAC7B,OAAO,eAACxC,EAAA,EAAUY,KAAX,WACH,sBAAKkE,MAAM,aAAX,UAAyBtC,EAAKhF,WAA9B,KAA4CgF,EAAKC,aACjD,gCACKD,EAAKE,SACN,cAAC,IAAD,CAAiB7C,UAAU,eAAegB,KAAMC,IAAevB,QAAS,SAACa,GAAD,OA/EzF,SAACA,EAAGuC,EAAQD,GAC3BtC,EAAEC,iBACF9C,EAAMqF,2BAA2BF,EAAUC,GA6EoEE,CAAWzC,EAAGoC,EAAKG,OAAQH,EAAKE,kBAJ3FF,EAAKG,qBAarD,eAACqB,EAAA,EAAMe,OAAP,WACI,cAAC7E,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAASZ,QAAS,SAACa,GAAD,OArFxC,SAACA,GAClBA,EAAEC,iBAEF,IAAI2E,EAAc,GAClB1C,EAAY9D,KAAI,SAAAgE,GACZwC,EAAYnD,KAAKW,EAAKyC,YAG1B,IAAIhE,EAAiB,CACjBC,OAAQ,OACRgE,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,aAAc,CACV5H,KAAMA,EACNmG,YAAaA,EACb0B,QAAQ,GAEZC,MAAO,CACHC,KAAMT,MAMlBhD,QAAQC,IAAIhB,EAAekE,MAG3B3D,MAAM,6BAAD,OAA8Bb,GAASM,GACvCQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFI,QAAQC,IAAIL,MAEfE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,MAEzC6B,IACAG,IA+CgE3B,CAAahC,IAArE,6BACA,cAACF,EAAA,EAAD,CAAQX,QAAShC,EAAMmI,OAAvB,2BC0BDC,EA5HE,SAACpI,GAAW,IAAD,EAEKoB,mBAAS,IAFd,mBAEjBlB,EAFiB,KAETmI,EAFS,OAGMjH,mBAAS,IAHf,mBAGjBkH,EAHiB,KAGRC,EAHQ,OAIkBnH,mBAAS,IAJ3B,mBAIjBI,EAJiB,KAIFgH,EAJE,OAKcpH,mBAAS,IALvB,mBAKjB2D,EALiB,KAKJ0D,EALI,OAMUrH,oBAAS,GANnB,mBAMjBsH,EANiB,KAMNjD,EANM,KAQlBrC,EAAQpD,EAAMoD,MAEpB7B,qBAAU,eAIV,IAAMwB,EAAmB,SAAC9C,EAAYG,GAClC,IAAMuI,EAAa,YAAOnH,GAC1BmH,EAAcrE,KAAK,CAAErE,aAAYG,aACjCoI,EAAiBG,IAgCftD,EAA6B,SAACF,EAAUC,GAC1C,IACIwD,EADa,YAAO7D,GACG8D,QAAO,SAAA5D,GAAI,OAAIA,EAAKG,SAAWA,KAC1DqD,EAAeG,IA2BnB,OACI,eAACE,EAAA,EAAD,CAAWxG,UAAU,iBAArB,UACI,cAACyE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,gCACI,4DACA,4FAIZ,eAACD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAM3E,UAAU,aAAayG,SAhCxB,SAAClG,GAClBA,EAAEC,iBAKa,KAAX5C,EACAqI,EAAW,IAEXtE,MAAM,yBAAD,OAA0B/D,EAA1B,kBAA0CkD,GAP9B,CACjBO,OAAQ,MACRC,SAAU,WAMLM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFkE,EAAWlE,MAEdE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,OAkBjC,UACI,eAACyC,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAczE,KAAK,OAAOoG,YAAY,eAAepD,MAAO1F,EAAQ8F,SAAU,SAAAnD,GAAC,OAAIwF,EAAWxF,EAAEqD,OAAON,aAE3G,cAACjD,EAAA,EAAD,CAAQd,QAAQ,UAAUe,KAAK,SAA/B,uBAKJ,cAACmE,EAAA,EAAD,UACKuB,EAAQvH,OAAS,GAAKuH,EAAQrH,KAAI,SAACf,GAAD,OAC/B,qBAAKoC,UAAU,aAAf,SACI,cAAC,EAAD,CAAYpC,OAAQA,EAAQ6C,iBAAkBA,EAAkBvB,cAAeA,KADlDtB,EAAO+I,aAOpD,eAACjC,EAAA,EAAD,WACI,cAACD,EAAA,EAAD,CAAKzE,UAAU,gBAAf,SACKd,EAAcT,OAAS,GAAK,cAAC,EAAD,CAAYoC,cAAe3B,EAAegC,iBA5FlE,SAACvD,EAAYG,GAClC,IACIwI,EADe,YAAOpH,GACGqH,QAAO,SAAA3I,GAAM,OAAIA,EAAOE,WAAaA,KAClEoI,EAAiBI,IAyF0GjE,qBApFlG,SAACuE,GAE1B,IAAMC,EAAW,YAAOpE,GACxBmE,EAAQjI,KAAI,SAAAgE,GACR,IAAIC,EAAYD,EAAKmE,MAAMjJ,KACvBF,EAAagF,EAAKoE,QAAQ,GAAGlJ,KAC7BgF,EAAWF,EAAK9E,KAChBiF,EAASH,EAAK5E,GACdiJ,EAAUrE,EAAK1E,cAAcC,QAC7BkH,EAAUzC,EAAKsE,IACfC,GAAS,EACbL,EAAYlI,KAAI,SAAAwI,GACRA,EAAarE,SAAWA,IACxBoE,GAAS,MAGZA,GAAQL,EAAY7E,KAAK,CAAEY,YAAWjF,aAAYkF,WAAUC,SAAQkE,UAAS5B,eAEtFe,EAAeU,IAkEwJ/F,MAAOA,MAElK,cAAC2D,EAAA,EAAD,CAAKzE,UAAU,cAAf,SACKyC,EAAYhE,OAAS,GAAK,cAAC,EAAD,CAAUiE,YAAaD,EAAaM,2BAA4BA,EAA4BE,oBA7D/G,WACxBkD,EAAe,KA4DkKhD,aAAcA,YAI3L,cAAC,EAAD,CAAOiE,KAAMhB,EAAWP,OAAQ,kBAAM1C,GAAa,IAAQT,YAAaD,EAAaM,2BAA4BA,EAA4BjC,MAAOA,QClH5JuG,EAAc,GAEhBA,EAAc,wBAIhB,IAAMC,EAAS,CACb,oBACA,kBACA,yBACA,2BAIIC,EAAO3H,OAAO4H,SAASD,KAC1BE,UAAU,GACVC,MAAM,KACNC,QAAO,SAAUC,EAASC,GACzB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,IACLhI,OAAO4H,SAASD,KAAO,GA8CRS,MA5Cf,WAAgB,IAAD,EAEalJ,oBAAS,GAFtB,mBAENgC,EAFM,KAECmH,EAFD,KAcb,OATAhJ,qBAAU,WACRkD,QAAQC,IAAIxC,OAAO4H,SAASU,OAAOC,YACnC,IAAIC,EAASb,EAAKc,aACdD,GACFH,EAASG,KAEV,CAACtH,IAIF,cAAC,IAAD,UACE,qBAAKd,UAAU,MAAf,SACE,sBAAKjC,GAAG,YAAR,WAEI+C,GACA,sBAAKd,UAAU,cAAf,UACE,wBAAQA,UAAU,aAAlB,0DACF,mBACEA,UAAU,kBACVsI,KAAI,UAtCU,yCAsCV,sBAnDD,mCAmDC,yBAAwDjB,EAAxD,kBAA6EC,EAAOiB,KAAK,OAAzF,yCAFN,iCAQF,cAAC,IAAD,UACGzH,GAAS,cAAC,IAAD,CACR0H,KAAK,IACLC,OAAQ,SAAC/K,GAAD,OACN,cAAC,EAAD,2BAAcA,GAAd,IAAqBoD,MAAOA,kBC9D7B4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhH,MAAK,YAAkD,IAA/CiH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f2ca3ece.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react'\nimport { Card, Button, ListGroup, ListGroupItem } from 'react-bootstrap'\n\n\nconst ArtistCard = (props) => {\n\n    const artistName = props.artist.name\n    const artistID = props.artist.id\n    const spotifyUrl = props.artist.external_urls.spotify\n    const artistImgURL = props.artist.images[0]\n    const followers = props.artist.followers.total\n    const genres = props.artist.genres\n    const generesLen = genres.length\n    const displayGenres = genres.map((genre, i) => {\n        return <>{genre}{i < generesLen - 1 ? \", \" : \"\"}</>\n    })\n\n    const [disabled, setDisabled] = useState(false);\n\n    useEffect(() => {\n        setDisabled(false)\n        props.listOfArtists.map((artist) => {\n            if (artist.artistID === artistID) {\n                setDisabled(true)\n                return true\n            }\n        })\n    }, [artistID, props.listOfArtists, artistName])\n\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    const handleOnClick = (e) => {\n        e.preventDefault();\n        props.handleListChange(artistName, artistID)\n        setDisabled(true)\n    }\n\n    //\n\n\n\n    return (\n        <Card style={{ wdith: '18rem' }}>\n            <Card.Img variant=\"top\" src={artistImgURL && artistImgURL.url} onClick={() => openInNewTab(spotifyUrl)} className=\"artistImage\" />\n            <Card.Body>\n                <Card.Title>{artistName}</Card.Title>\n                <ListGroup className=\"list-group-flush align-left\">\n                    <ListGroupItem>Followers: {followers}</ListGroupItem>\n                    <ListGroupItem>Generes: {displayGenres}</ListGroupItem>\n                </ListGroup>\n                <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleOnClick(e)} disabled={disabled}>Add to Artist List</Button>\n            </Card.Body>\n        </Card>\n    )\n\n\n}\n\nexport default ArtistCard","import { Button, ListGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst ArtistList = (props) => {\n\n    const artistNameList = props.listofartists\n    const token = props.token\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n        };\n\n\n\n        async function getPopularSongs() {\n            let songArray = []\n            await Promise.all(artistNameList.map(async (artist) => {\n                await fetch(`/api/getPopularSongs?artistID=${artist.artistID}&token=${token}`, requestOptions)\n                .then(response => response.json())\n                .then(result => {\n                    songArray.push(...result)\n                })\n                .catch(error => console.log('error', error));\n                })\n            )\n          props.handleSetListOfSongs(songArray)\n        }\n\n        getPopularSongs();\n    }\n\n    const removeArtist = (e, artistID, artistName) => {\n        e.preventDefault();\n        props.handleListRemove(artistName, artistID)\n    }\n\n    return (\n        <div>\n            <ListGroup>\n                {artistNameList && artistNameList.map((artist) => {\n                    return <ListGroup.Item key={artist.artistID}>{artist.artistName}\n                        <FontAwesomeIcon className=\"deleteButton\" icon={faMinusCircle} onClick={(e) => removeArtist(e, artist.artistID, artist.artistName)} />\n                    </ListGroup.Item>\n                })}\n                <Button variant=\"primary\" type=\"submit\" className=\"generateButton\" onClick={(e) => handleSubmit(e)}>Generate Popular Songs List</Button>\n\n            </ListGroup>\n        </div>\n    )\n\n}\n\nexport default ArtistList\n","import { Button, ListGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst SongList = (props) => {\n\n    const listOfSongs = props.listofsongs\n\n    const removeSong = (e, songID, songName) => {\n        e.preventDefault();\n        props.handleSetListOfSongsRemove(songName, songID)\n    }\n\n    const handleClear = (e) => {\n        e.preventDefault();\n        props.handleClearSongList()\n    }\n\n    return (\n        <div>\n            <ListGroup>\n                {listOfSongs && listOfSongs.map((song) => {\n                    return <ListGroup.Item key={song.songID}>\n                        <div className=\"songArtist\">{song.artistName}, {song.albumName}</div>\n                        <div>\n                            {song.songName}\n                            <FontAwesomeIcon className=\"deleteButton\" icon={faMinusCircle} onClick={(e) => removeSong(e, song.songID, song.songName)} />\n                        </div>\n\n                    </ListGroup.Item>\n                })}\n                <div className=\"songListButtons\">\n                <Button variant=\"primary\" type=\"delete\" className=\"generateButton\" onClick={(e) => handleClear(e)}>Clear List</Button>\n                <Button variant=\"success\" type=\"submit\" className=\"generateButton\" onClick={() => props.setShowPopUp(true)}>Create Playlist</Button>\n                </div>\n            </ListGroup>\n        </div>\n    )\n\n}\n\nexport default SongList\n","import { useState } from \"react\";\n\nconst useInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    return {\n        value,\n        setValue,\n        reset: () => setValue(\"\"),\n        bind: {\n            value,\n            onChange: event => {\n                setValue(event.target.value);\n            }\n        }\n    };\n};\n\nexport default useInput","import { Modal, Button, Form, Col, Row, ListGroup } from 'react-bootstrap'\nimport useInput from '../custom_hooks/useInput'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons'\nimport React, { useEffect, useState } from 'react'\n\n\n\nconst PopUp = (props) => {\n\n    const { value: name, bind: bindName, reset: resetName } = useInput('');\n    const { value: description, bind: bindDescription, reset: resetDescription } = useInput('');\n    // const [isPublic, setisPublic] = useState(false);\n\n    const listOfSongs = props.listofsongs\n    const token = props.token\n\n    const removeSong = (e, songID, songName) => {\n        e.preventDefault();\n        props.handleSetListOfSongsRemove(songName, songID)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let songURIList = []\n        listOfSongs.map(song => {\n            songURIList.push(song.songURI)\n        })\n\n        var requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                playlistData: {\n                    name: name,\n                    description: description,\n                    public: false\n                },\n                songs: {\n                    uris: songURIList\n                }\n\n            })\n        };\n\n        console.log(requestOptions.body)\n\n\n        fetch(`/api/createPlaylist?token=${token}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n            })\n            .catch(error => console.log('error', error));\n\n        resetName();\n        resetDescription();\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Generate Spotify Playlist\n        </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col>\n                        <Form className=\"spotifyForm\" >\n                            <Form.Group controlId=\"formName\">\n                                <Form.Label>Playlist Name</Form.Label>\n                                <Form.Control type=\"text\" {...bindName} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formDescription\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control as=\"textarea\" {...bindDescription} />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col>\n                        Review Song List\n                    <ListGroup className=\"popUpSongList\">\n                            {listOfSongs && listOfSongs.map((song) => {\n                                return <ListGroup.Item key={song.songID}>\n                                    <div class=\"songArtist\">{song.artistName}, {song.albumName}</div>\n                                    <div>\n                                        {song.songName}\n                                        <FontAwesomeIcon className=\"deleteButton\" icon={faMinusCircle} onClick={(e) => removeSong(e, song.songID, song.songName)} />\n                                    </div>\n\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"success\" type=\"submit\" onClick={(e) => handleSubmit(e)}>Create Playlist</Button>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default PopUp","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport ArtistCard from '../components/artistCard'\nimport ArtistList from '../components/artistList'\nimport SongList from '../components/songList'\nimport PopUp from '../components/popUp'\n\n\n\nconst HomePage = (props) => {\n\n    const [artist, setArtisit] = useState([]);\n    const [content, setContent] = useState(\"\");\n    const [listOfArtists, setListOfArtists] = useState([])\n    const [listOfSongs, setListOfSongs] = useState([])\n    const [showPopUp, setShowPopUp] = useState(false);\n\n    const token = props.token;\n\n    useEffect(() => {\n\n    })\n\n    const handleListChange = (artistName, artistID) => {\n        const newArtistList = [...listOfArtists];\n        newArtistList.push({ artistName, artistID })\n        setListOfArtists(newArtistList)\n    }\n\n    const handleListRemove = (artistName, artistID) => {\n        const newArtistList = [...listOfArtists];\n        let filtered = newArtistList.filter(artist => artist.artistID !== artistID)\n        setListOfArtists(filtered)\n    }\n\n\n\n    const handleSetListOfSongs = (results) => {\n\n        const newSongList = [...listOfSongs]\n        results.map(song => {\n            let albumName = song.album.name;\n            let artistName = song.artists[0].name\n            let songName = song.name\n            let songID = song.id\n            let songURL = song.external_urls.spotify\n            let songURI = song.uri\n            let inList = false\n            newSongList.map(existingSong => {\n                if (existingSong.songID === songID) {\n                    inList = true;\n                }\n            })\n            if (!inList) newSongList.push({ albumName, artistName, songName, songID, songURL, songURI })\n        })\n        setListOfSongs(newSongList)\n    }\n\n    const handleSetListOfSongsRemove = (songName, songID) => {\n        const newSongList = [...listOfSongs]\n        let filtered = newSongList.filter(song => song.songID !== songID)\n        setListOfSongs(filtered)\n    }\n    const handleClearSongList = () => {\n        setListOfSongs([])\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n        };\n        if (artist === \"\") {\n            setContent(\"\")\n        } else {\n            fetch(`/api/getArtist?artist=${artist}&token=${token}`, requestOptions)\n                .then(response => response.json())\n                .then(result => {\n                    setContent(result)\n                })\n                .catch(error => console.log('error', error));\n        }\n\n\n    }\n\n    return (\n        <Container className=\"main-container\">\n            <Row>\n                <Col>\n                    <div>\n                        <h1>Spotify Playlist Generator</h1>\n                        <h3>Create Playlist with top songs from list of Artists</h3>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Form className=\"align-left\" onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"formSearchArtists\">\n                            <Form.Label>Artist Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter Artist\" value={artist} onChange={e => setArtisit(e.target.value)} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Search\n                        </Button>\n                    </Form>\n\n                    <Row>\n                        {content.length > 0 && content.map((artist) =>\n                            <div className=\"artistCard\" key={artist.key}>\n                                <ArtistCard artist={artist} handleListChange={handleListChange} listOfArtists={listOfArtists}></ArtistCard>\n                            </div>\n                        )}\n                    </Row>\n\n                </Col>\n                <Col>\n                    <Row className=\"listOfArtists\">\n                        {listOfArtists.length > 0 && <ArtistList listofartists={listOfArtists} handleListRemove={handleListRemove} handleSetListOfSongs={handleSetListOfSongs} token={token}></ArtistList>}\n                    </Row>\n                    <Row className=\"listOfSongs\">\n                        {listOfSongs.length > 0 && <SongList listofsongs={listOfSongs} handleSetListOfSongsRemove={handleSetListOfSongsRemove} handleClearSongList={handleClearSongList} setShowPopUp={setShowPopUp}></SongList>}\n                    </Row>\n                </Col>\n            </Row>\n            <PopUp show={showPopUp} onHide={() => setShowPopUp(false)} listofsongs={listOfSongs} handleSetListOfSongsRemove={handleSetListOfSongsRemove} token={token}></PopUp>\n        </Container>\n    )\n}\n\nexport default HomePage","import logo from './logo.svg';\nimport './App.css';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage'\n\n\nconst clientId = \"f5c12e204437479da9efa53d9109b6ca\";\nvar redirectUri = \"\"\nif (process.env.NODE_ENV === 'production') {\n  redirectUri = 'http://localhost:3001';\n} else {\n  redirectUri = 'http://localhost:3000'; // Your redirect uri\n}\nconst scopes = [\n  \"user-read-private\",\n  \"user-read-email\",\n  \"playlist-modify-public\",\n  \"playlist-modify-private\"\n];\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nfunction App() {\n\n  const [token, setToken] = useState(false);\n\n\n  useEffect(() => {\n    console.log(window.location.origin.toString())\n    let _token = hash.access_token;\n    if (_token) {\n      setToken(_token)\n    }\n  }, [token])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div id=\"page-body\">\n\n          {!token && (\n            <div className=\"loginButton\">\n              <header className=\"headerText\">Welcome to Popular Songs Playlist Generator!</header>\n            <a\n              className=\"btn btn-success\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n            </div>\n          )}\n          <Switch>\n            {token && <Route\n              path='/'\n              render={(props) => (\n                <HomePage {...props} token={token} />\n              )}\n            />}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}